{"version":3,"sources":["webpack:///./src/components/Bio.js","webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","isBlog","frontmatter","type","disqusConfig","identifier","id","react_default","a","createElement","Layout","location","seo","description","excerpt","date","style","display","marginBottom","marginTop","className","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","rel","lib","shortname","config","React","Component","pageQuery"],"mappings":"0KA4CA,2ECnCMA,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KAEZC,EAAoC,SAA1Bb,EAAKc,YAAYC,KAE3BC,EAAe,CACnBC,WAAYjB,EAAKkB,GACjBV,MAAOR,EAAKc,YAAYN,OAI1B,OACEW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUtB,KAAKC,MAAMqB,SAAUf,MAAOH,GAC5Cc,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKhB,MAAOR,EAAKc,YAAYN,MAAOiB,YAAazB,EAAK0B,UAIpD1B,EAAKc,YAAYa,KACjBR,EAAAC,EAAAC,cAAA,KACEO,MAAO,CACLC,QAAO,QACPC,aAAY,OACZC,UAAS,SAGV/B,EAAKc,YAAYa,MACb,KAGTR,EAAAC,EAAAC,cAAA,OAAKW,UAAU,mBAAmBC,wBAAyB,CAAEC,OAAQlC,EAAKmC,QAC1EhB,EAAAC,EAAAC,cAAA,MACEO,MAAO,CACLE,aAAY,UAKfjB,EAASM,EAAAC,EAAAC,cAAA,MACRO,MAAO,CACLC,QAAO,OACPO,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXpB,EAAAC,EAAAC,cAAA,UACGV,GACCQ,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,GAAI9B,EAAS+B,OAAOC,KAAMC,IAAI,QAApC,KACKjC,EAASG,YAAYN,QAI9BW,EAAAC,EAAAC,cAAA,UACGT,GACCO,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,GAAI7B,EAAK8B,OAAOC,KAAMC,IAAI,QAC7BhC,EAAKE,YAAYN,MADpB,QAKE,GACRW,EAAAC,EAAAC,cAACwB,EAAA,gBAAD,CAAiBC,UAzDG,YAyDyBC,OAAQ/B,SAhE9BgC,IAAMC,WAwExBC,GAFEpD,YAEO","file":"component---src-templates-blog-post-js-634f4a1a5ccf9e9e42fd.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: `20px`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: `20px`,\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in San\n              Francisco building useful things.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { DiscussionEmbed } from \"disqus-react\";\n// import { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    const isBlog = (post.frontmatter.type === 'blog');\n    const disqusShortname = \"dwbbb-com\";\n    const disqusConfig = {\n      identifier: post.id,\n      title: post.frontmatter.title,\n    };\n    // console.log('excerpt', post.excerpt);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        {/* <h1 className=\"m-test\">{post.frontmatter.title}</h1> */}\n\n        {\n          post.frontmatter.date ? \n          <p\n            style={{\n              display: `block`,\n              marginBottom: `20px`,\n              marginTop: `20px`,\n            }}\n          >\n            {post.frontmatter.date}\n          </p> : null\n        }\n        \n        <div className=\"markdown-content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: `20px`,\n          }}\n        />\n        {/* <Bio /> */}\n\n        {isBlog ? <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul> : ''}\n        <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        type\n      }\n    }\n  }\n`\n"],"sourceRoot":""}